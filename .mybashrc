cd ~/workspace/kiwata/kernel/script/
eval `dircolors ~/.colorrc`

# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
     PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
     PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.colorrc && eval "$(dircolors -b ~/.colorrc)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
alias python='python3'
alias runserver='python manage.py runserver'
# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi


export PYENV_ROOT="$HOME/.pyenv"
export PATH="$HOME/.pyenv/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

function parse_git_branch {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ [\1]/'
}
function promps {
    # 色は気分で変えたいかもしれないので変す宣言しておく
    local  BLUE="\[\e[1;36m\]"
    local  RED="\[\e[1;31m\]"
    local  GREEN="\[\e[1;32m\]"
    local  WHITE="\[\e[00m\]"
    local  GRAY="\[\e[1;37m\]"

    case $TERM in
        xterm*) TITLEBAR='\[\e]0;\W\007\]';; # TITLEBAR='\[\e]0;\W\007\]';;
        *)      TITLEBAR="";;
    esac
    # local BASE="\u@\h"
    local BASE="\u"
    PS1="${TITLEBAR}${GREEN}${BASE}${WHITE} ${BLUE}\W${GREEN}\$(parse_git_branch)\n${BLUE}>${WHITE} "
}
promps
export PATH=$HOME/.nodebrew/current/bin:$PATH
export CPLUS_INCLUDE_PATH="$CPLUS_INCLUDE_PATH:$HOME/boost_1_67_0/:/usr/include/python3.6m/"

export PYENV_VIRTUALENV_DISABLE_PROMPT=1
pyenvVirtualenvUpdatePrompt() {
    RED='\[\e[1;36m\]'
    GREEN='\[\e[0;32m\]'
    BLUE='\[\e[0;34m\]'
    RESET='\[\e[0m\]'
    [ -z "$PYENV_VIRTUALENV_ORIGINAL_PS1" ] && export PYENV_VIRTUALENV_ORIGINAL_PS1="$PS1"
    [ -z "$PYENV_VIRTUALENV_GLOBAL_NAME" ] && export PYENV_VIRTUALENV_GLOBAL_NAME="$(pyenv global)"
    VENV_NAME="$(pyenv version-name)"
    VENV_NAME="${VENV_NAME##*/}"
    GLOBAL_NAME="$PYENV_VIRTUALENV_GLOBAL_NAME"

    # non-global versions:
    COLOR="$BLUE"
    # global version:
    [ "$VENV_NAME" == "$GLOBAL_NAME" ] && COLOR="$GREEN"
    # virtual envs:
    [ "${VIRTUAL_ENV##*/}" == "$VENV_NAME" ] && COLOR="$RED"

    if [ -z "$COLOR" ]; then
        PS1="$PYENV_VIRTUALENV_ORIGINAL_PS1"
    else
        PS1="$COLOR($COLOR${VENV_NAME}$RESET$COLOR) $PYENV_VIRTUALENV_ORIGINAL_PS1"
    fi
    export PS1
}
export PROMPT_COMMAND="$PROMPT_COMMAND pyenvVirtualenvUpdatePrompt;"

alias tab='touch a.py b.py c.py d.py'
alias tabb='touch a.py log.md'
alias openfile='code a.py b.py c.py d.py'
alias cdo='code a.py log.md'

alias chaos='ssh h-kiwata@133.1.17.119 -p 20022'
alias note='jupyter notebook'
alias wani='cd ~/workspace/kiwata/ctf/WaniHackase/wani-writeup'
alias writeup='touch README.md solve.py'

function mkdircd () { mkdir -p "$@" && eval cd "\"\$$#\""; }
JAVA_HOME=/opt/java/jdk-11.0.2
PATH=$JAVA_HOME/bin:$PATH

if [ -f /usr/bin/tesseract ]; then
    export TESSDATA_PREFIX=/usr/local/share/tessdata/
fi

alias sushi='cd /home/h-kiwata/workspace/kiwata/kernel/script/sushi/script'
alias kiwata='cd /home/h-kiwata/workspace/kiwata'
alias sushi='python /home/h-kiwata/workspace/kiwata/kernel/script/sushi/script/main.py'

alias keisuu='ssh h-kiwata@keisuu.jp -p 56789'

alias a='python ./a.py'
alias b='python ./b.py'
alias c='python ./c.py'
alias d='python ./d.py'

alias ubuntu1='ssh -p 10022 h-kiwata@192.168.11.14'
alias ubuntu2='ssh -p 20022 h-kiwata@192.168.11.14'
alias ubuntu3='ssh -p 30022 h-kiwata@192.168.11.14'

alias ap='ansible-playbook'

alias lab1='ssh h-kiwata@192.168.50.52'
alias lab2='ssh h-kiwata@192.168.50.44'

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

alias open='xdg-open'
alias cdscript='cd ~/workspace/kiwata/kernel/script/'
alias clip='xclip'
alias artil_api='docker stop proxy && docker rm proxy && docker rm rails-backend_web_1 && docker rm rails-backend_frontend_1  && docker rm rails-backend_db_1'
alias artil_up='(docker images -aq | xargs docker rmi) && bash /home/h-kiwata/workspace/kiwata/kernel/script/Artill/artill_frontend/scripts/clean-build.sh'
export PATH="$HOME/.rbenv/bin:$PATH"
export PATH="$HOME/.rbenv/bin:$PATH"

[[ -d ~/.rbenv  ]] && \
  export PATH=${HOME}/.rbenv/bin:${PATH} && \
  eval "$(rbenv init -)"

alias dockerstop='docker ps -aq | xargs docker stop'
alias dockerrm='docker ps -aq | xargs docker rm'
alias dockerrmi='docker images -aq | xargs docker rmi'

alias runs='python manage.py runserver'
alias pm='python manage.py'

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/home/h-kiwata/.sdkman"
[[ -s "/home/h-kiwata/.sdkman/bin/sdkman-init.sh" ]] && source "/home/h-kiwata/.sdkman/bin/sdkman-init.sh"
PATH="/usr/bin/heroku/bin:$PATH"

export mail='simplelpmis6@gmail.com'
export mail_lab='kiwata@opt.comm.eng.osaka-u.ac.jp'
export nogizaka='1301163'
export id='dilmnqvovpnmlib'

alias intern-aws='ssh ec2-user@13.114.37.238'

alias sss='sudo systemctl suspend'

alias keisuuip='ssh -p 56789 h-kiwata@153.176.56.100'
